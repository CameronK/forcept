var FlowEditor=React.createClass({displayName:"FlowEditor",getInitialState:function(){return{fields:{},fieldValidities:{},invalidCount:0,isValid:!0,fieldsRemoved:[]}},componentWillMount:function(){this.setState({fields:this.props.fields},function(){this.checkContainerValidity()}.bind(this))},handleAddNewField:function(){var e=this.state.fields,t=this.state.fieldValidities,a=(new Date).getTime();e[a]=FlowEditor.getDefaultFieldState(this.props.stageType),t[a]=!1,this.setState({fields:e,fieldValidities:t}),this.checkContainerValidity()},handleRemoveField:function(e){var t=this.state.fields,a=this.state.fieldValidities,s=this.state.fieldsRemoved;t.hasOwnProperty(e)&&(s.push((this.refs[e].state.name.length>0?this.refs[e].state.name:"<em>Untitled field</em>")+" &nbsp; <span class='label label-default'>"+e+"</span>"),delete t[e]),a.hasOwnProperty(e)&&delete a[e],this.setState({fields:t,fieldValidities:a,fieldsRemoved:s}),this.checkContainerValidity()},handleConfigUpload:function(e){var t=new FileReader,a=e.target.files[0];t.onload=function(e){var t=JSON.parse(atob(e.target.result.split(",")[1]));t&&this.setState({fields:t})}.bind(this),t.readAsDataURL(a)},checkFieldValidity:function(e){var t=this.state.fieldValidities;t[e]=this.refs[e].isValid(),this.setState({fieldValidities:t}),this.checkContainerValidity()},checkContainerValidity:function(){var e=!0,t=0;for(var a in this.state.fieldValidities)this.state.fieldValidities[a]!==!0&&(t++,e=!1);this.setState({invalidCount:t,isValid:e})},compileData:function(){var e={};return Object.keys(this.state.fields).map(function(t,a){e[t]=this.refs[t].state}.bind(this)),e},clearRemoved:function(){this.setState({fieldsRemoved:[]})},render:function(){var e;return e=Object.keys(this.state.fields).length>0?Object.keys(this.state.fields).map(function(e,t){return React.createElement(FlowEditor.Field,React.__spread({},this.state.fields[e],{stageType:this.props.stageType,key:e,"data-key":e,ref:e,index:t,onChange:this.checkFieldValidity.bind(this,e),onRemove:this.handleRemoveField.bind(this,e)}))}.bind(this)):React.createElement("div",{className:"alert alert-info"},"No fields added — try ",React.createElement("a",{className:"alert-link",onClick:this.handleAddNewField},"adding a new one"),"."),React.createElement("div",null,React.createElement("h4",{className:"p-t"},"Field configuration",React.createElement("div",{className:"btn-group btn-group-sm pull-right"},React.createElement("label",{htmlFor:"uploadConfig",className:"btn btn-primary-outline"},"Upload config"),React.createElement("input",{type:"file",id:"uploadConfig",style:{display:"none"},onChange:this.handleConfigUpload,accept:".json"}),React.createElement("a",{href:"/data/flow/download?stage="+encodeURIComponent(this.props.stageName)+"&fields="+window.btoa(JSON.stringify(this.state.fields)),target:"_blank",className:"btn btn-primary-outline"},"Download config"))),React.createElement("hr",null),React.createElement("div",{id:"flow-editor-fields-contain"},e,React.createElement("button",{type:"button",className:"btn btn-primary btn-lg",onClick:this.handleAddNewField},"Add a new field"),React.createElement("button",{type:"button",className:"btn btn-success btn-lg",onClick:this.props.handleSubmit,disabled:!this.state.isValid},this.state.isValid?"Submit changes":this.state.invalidCount+" field(s) need attention before submitting")))}});FlowEditor.customizableFields=["select","multiselect","file"],FlowEditor.disableTypeChanges=["multiselect","file"],FlowEditor.getDefaultFieldState=function(e){switch(e){case"pharmacy":return{name:"",type:"multiselect",mutable:!0,settings:{options:{},allowCustomData:!1}};default:return{name:"",type:"text",mutable:!0,settings:{}}}},FlowEditor.getDefaultOptionState=function(e){switch(e){case"pharmacy":return{value:"",count:0,available:!1};default:return{value:""}}},FlowEditor.Field=React.createClass({displayName:"Field",getInitialState:function(){return FlowEditor.getDefaultFieldState(this.props.stageType)},componentWillMount:function(){this.setState({name:this.props.name,type:this.props.type,mutable:isTrue(this.props.mutable),description:this.props.hasOwnProperty("description")?this.props.description:null,settings:-1!==FlowEditor.customizableFields.indexOf(this.props.type)&&"object"==typeof this.props.settings&&Object.keys(this.props.settings).length>0?this.props.settings:null})},handleFieldNameChange:function(e){this.setState({name:e.target.value},function(){this.props.onChange(this.props["data-key"])})},handleFieldTypeChange:function(e){this.setState({type:e.target.value},function(){this.props.onChange(this.props["data-key"])})},handleFieldDescriptionChange:function(e){this.setState({description:e.target.value},function(){this.props.onChange(this.props["data-key"])})},handleRemoveField:function(){this.props.onRemove(this.props.key)},handleFieldSettingsChange:function(){var e=this.refs["settings-"+this.props["data-key"]].state;this.setState({settings:e})},isValid:function(){var e=!0;return 0==this.state.name.length&&(e=!1),e},render:function(){var e,t,a,s,n;return-1!==FlowEditor.disableTypeChanges.indexOf(this.state.type)&&(a=React.createElement("div",{className:"alert alert-info"},"Once created, the ",React.createElement("strong",null,this.state.type)," field type cannot be changed to any other type.")),"pharmacy"==this.props.stageType?(s="Category",n="categories"):(s="Input",n="inputs",t=React.createElement("div",{className:"form-group"},React.createElement("label",{className:"form-control-label"},"Type:"),React.createElement("select",{className:"form-control",disabled:!this.state.mutable||-1!==FlowEditor.disableTypeChanges.indexOf(this.state.type),onChange:this.handleFieldTypeChange,defaultValue:this.state.type},React.createElement("optgroup",{label:"Inputs"},React.createElement("option",{value:"text"},"Text input"),React.createElement("option",{value:"textarea"},"Textarea input"),React.createElement("option",{value:"number"},"Number input"),React.createElement("option",{value:"date"},"Date input")),React.createElement("optgroup",{label:"Multiple-option fields"},React.createElement("option",{value:"select"},"Select input with options"),React.createElement("option",{value:"multiselect"},"Multi-select input with options"),React.createElement("option",{value:"file"},"File input"),React.createElement("option",{value:"yesno"},"Yes or no buttons")),React.createElement("optgroup",{label:"Other"},React.createElement("option",{value:"header"},"Group fields with a header"),React.createElement("option",{value:"pharmacy"},"Pharmacy - show available medication"))),a)),0==this.state.name.length?nameInputGroup=React.createElement("div",{className:"form-group has-error"},React.createElement("label",{className:"form-control-label",htmlFor:"name-"+this.props["data-key"]},"Name:"),React.createElement("input",{type:"text",id:"name-"+this.props["data-key"],className:"form-control form-control-error",placeholder:s+" name",maxLength:"100",onChange:this.handleFieldNameChange,defaultValue:this.state.name}),React.createElement("div",{className:"alert alert-danger"},React.createElement("strong",null,"Heads up:")," all ",n," require a name.")):nameInputGroup=React.createElement("div",{className:"form-group"},React.createElement("label",{className:"form-control-label",htmlFor:"name-"+this.props["data-key"]},"Name:"),React.createElement("input",{type:"text",id:"name-"+this.props["data-key"],className:"form-control",placeholder:"Field name",maxLength:"100",onChange:this.handleFieldNameChange,defaultValue:this.state.name})),null!==this.state.description&&this.state.description.length>0&&(e=this.props.description),React.createElement("div",{"data-key":this.props["data-key"],"data-index":this.props.index,className:"row flow-editor-configurator-row p-t"},React.createElement("div",{className:"col-xs-12"},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-sm-12 col-md-10"},React.createElement("h4",{className:"field-title"},React.createElement("span",{className:"label label-info"},"#",this.props.index+1),React.createElement("span",{className:"label label-default"},this.props["data-key"]),React.createElement("span",{className:"title hidden-lg-down"},React.createElement("small",null,this.state.name.length>0?this.state.name:"pharmacy"==this.props.stageType?"Untitled category":"Untitled "+this.state.type+" input")))),React.createElement("div",{className:"col-sm-12 col-md-2"},React.createElement("h4",{className:"field-title m-b"},React.createElement("button",{type:"button",className:"btn btn-sm btn-danger-outline pull-right",disabled:!this.state.mutable,onClick:this.handleRemoveField},"× Remove"))))),React.createElement("div",{className:"col-sm-4 col-xs-12"},nameInputGroup,t,React.createElement("div",{className:"form-group"},React.createElement("label",{className:"form-control-label"},"Description:"),React.createElement("textarea",{className:"form-control",maxLength:"255",placeholder:"Enter a description here",onChange:this.handleFieldDescriptionChange,defaultValue:e}))),React.createElement("div",{className:"col-sm-8 col-xs-12"},React.createElement(FlowEditor.Field.Settings,{stageType:this.props.stageType,ref:"settings-"+this.props["data-key"],"field-key":this.props["data-key"],type:this.state.type,mutable:this.state.mutable,settings:this.state.settings,onChange:this.handleFieldSettingsChange})))}}),FlowEditor.Field.Settings=React.createClass({displayName:"Settings",getInitialState:function(){switch(this.props.type){case"select":return{options:{},allowCustomData:!1};case"multiselect":return{options:{}};case"file":return{accept:[]};default:return{}}},componentWillMount:function(){switch(this.props.type){case"select":this.props.hasOwnProperty("settings")&&null!==this.props.settings&&(this.props.settings.hasOwnProperty("options")&&this.setState({options:this.props.settings.options}),this.props.settings.hasOwnProperty("allowCustomData")&&"true"==this.props.settings.allowCustomData&&this.setState({allowCustomData:"true"==this.props.settings.allowCustomData}));break;case"multiselect":this.props.hasOwnProperty("settings")&&null!==this.props.settings&&this.props.settings.hasOwnProperty("options")&&this.setState({options:this.props.settings.options});break;case"file":this.props.hasOwnProperty("settings")&&null!==this.props.settings&&this.props.settings.hasOwnProperty("accept")&&this.setState({accept:this.props.settings.accept})}},componentDidMount:function(){},handleAddOption:function(){var e=function(){var e=this.state.options;e[(new Date).getTime()]=FlowEditor.getDefaultOptionState(this.props.stageType),this.setState({options:e}),this.props.onChange(this.state)}.bind(this);this.state.hasOwnProperty("options")?e():this.setState(this.getInitialState(),function(){e()}.bind(this))},handleRemoveOption:function(e){var t=this.state.options;t.hasOwnProperty(e)&&delete t[e],this.setState({options:t},function(){this.props.onChange(this.state)}.bind(this))},handleChangeOptionPosition:function(e,t){return function(a){var s=this.state.options,n=Object.keys(s),i=s[t],l=n.indexOf(t);if(-1!==l){var o,r=n[l];switch(e){case"up":o=n[l-1];break;case"down":o=n[l+1]}var c=s[o];s[o]=i,s[r]=c,this.setState({options:s},function(){this.props.onChange(this.state)}.bind(this))}}.bind(this)},handleChangeOptionText:function(e){return function(t){var a=this.state.options;a.hasOwnProperty(e)&&(a[e].value=t.target.value),this.setState({options:a},function(){this.props.onChange(this.state)}.bind(this))}.bind(this)},handleAllowCustomDataChange:function(){var e=!this.state.allowCustomData;this.setState({allowCustomData:e},function(){this.props.onChange(this.state)})},handleChangeAllowedFiletypes:function(e){for(var t=e.target.options,a=[],s=0;s<t.length;s++)t[s].selected&&a.push(t[s].value);this.setState({accept:a},function(){this.props.onChange(this.state)}.bind(this))},handleDrugQuantityChange:function(e){return function(t){var a=this.state.options;a[e].count=parseInt(t.target.value),this.setState({options:a},function(){this.props.onChange(this.state)}.bind(this))}.bind(this)},handleDrugAvailabilityChange:function(e){return function(t){var a=this.state.options;a[e].available="true"==t.target.value,this.setState({options:a},function(){this.props.onChange(this.state)}.bind(this))}.bind(this)},render:function(){var e;switch(e=0==this.props.mutable?React.createElement("div",{className:"alert alert-danger"},React.createElement("strong",null,"Notice:")," This field is protected. Only the display name and type-based settings can be modified."):React.createElement("span",null),this.props.type){case"text":case"textarea":case"number":case"date":case"yesno":case"header":case"pharmacy":return React.createElement("div",null,React.createElement("div",{className:"alert alert-info m-t"},"No configuration is required for ",this.props.type," inputs."),e);case"select":case"multiselect":var t,a,s=function(){t=React.createElement("div",{className:"alert alert-info"},"No options have been defined — try ",React.createElement("a",{className:"alert-link",onClick:this.handleAddOption},"adding one"),".")};if(this.state.hasOwnProperty("allowCustomData")&&1==this.state.allowCustomData&&(a=React.createElement("div",{className:"col-sm-12"},React.createElement("div",{className:"checkbox m-t"},React.createElement("label",null,React.createElement("input",{type:"checkbox",checked:1==this.state.allowCustomData,onChange:this.handleAllowCustomDataChange}),"Allow users to enter custom data for this field")))),this.state.hasOwnProperty("options")){var n=Object.keys(this.state.options);n.length>0?t=n.map(function(e,t){var a,s,i,l=this.state.options[e];return 0!==t&&(a=React.createElement("button",{type:"button",className:"btn btn-primary",onClick:this.handleChangeOptionPosition("up",e)},"↑")),t!==n.length-1&&(s=React.createElement("button",{type:"button",className:"btn btn-primary",onClick:this.handleChangeOptionPosition("down",e)},"↓")),"pharmacy"==this.props.stageType&&(i=React.createElement("div",{className:"col-xs-12"},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-xs-12 col-sm-6"},React.createElement("div",{className:"input-group input-group-sm"},React.createElement("input",{type:"number",className:"form-control",min:0,value:l.count,onChange:this.handleDrugQuantityChange(e)}),React.createElement("span",{className:"input-group-addon"},"qty in stock"))),React.createElement("div",{className:"col-xs-12 col-sm-6"},React.createElement("div",{className:"input-group input-group-sm"},React.createElement("span",{className:"input-group-addon"},"available"),React.createElement("select",{className:"form-control",defaultValue:l.available,onChange:this.handleDrugAvailabilityChange(e)},React.createElement("option",{value:!0},"Yes"),React.createElement("option",{value:!1},"No"))))))),React.createElement("div",{className:("pharmacy"!==this.props.stageType?"field-select-option ":"")+"form-group row",key:t},React.createElement("div",{className:"col-sm-12"},React.createElement("div",{className:"input-group input-group-sm"},React.createElement("input",{type:"text",placeholder:"Enter a value for this option",className:"form-control",value:l.value,onChange:this.handleChangeOptionText(e)}),React.createElement("span",{className:"input-group-btn"},a,s,React.createElement("button",{type:"button",className:"btn btn-danger",onClick:this.handleRemoveOption.bind(this,e)},React.createElement("span",null,"×"))))),i)}.bind(this)):s()}else s();return React.createElement("div",{className:"field-select-options-contain p-t"},React.createElement("h5",null,"pharmacy"==this.props.stageType?"Drugs in this category":"Options"," (",this.state.hasOwnProperty("options")?Object.keys(this.state.options).length:0,")"),t,a,e,React.createElement("button",{type:"button",className:"btn btn-primary-outline",onClick:this.handleAddOption},"Add another ","pharmacy"==this.props.stageType?"drug":"option"));case"file":return React.createElement("div",{className:"field-select-options-contain"},React.createElement("h5",null,"Accepted file types"),React.createElement("select",{className:"form-control",multiple:!0,onChange:this.handleChangeAllowedFiletypes,defaultValue:this.state.accept},React.createElement("option",{value:"image/*"},"image / *")),e);default:return React.createElement("div",null,React.createElement("div",{className:"alert alert-danger m-t"},'Unrecognized input type "',this.props.type,'"'),e)}}});