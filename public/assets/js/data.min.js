var DataDisplays={setupDates:function(e){var t=new Date;t.setDate(t.getDate()-7),e.setState({from:t.toISOString().split(".")[0],to:(new Date).toISOString().split(".")[0]},function(){e.update()})}};DataDisplays.RangeModule=React.createClass({displayName:"RangeModule",render:function(){return React.createElement("div",{className:"row date-range"},React.createElement("div",{className:"col-xs-12 col-sm-6"},React.createElement("div",{className:"input-group"},React.createElement("span",{className:"input-group-addon"},"From"),React.createElement("input",{type:"datetime-local",className:"form-control",placeholder:"Date",value:this.props.from,onChange:this.props.onChangeFrom}))),React.createElement("div",{className:"col-xs-12 col-sm-6"},React.createElement("div",{className:"input-group"},React.createElement("span",{className:"input-group-addon"},"To"),React.createElement("input",{type:"datetime-local",className:"form-control",placeholder:"Date",value:this.props.to,onChange:this.props.onChangeTo}))))}}),DataDisplays.FlowOverview=React.createClass({displayName:"FlowOverview",getInitialState:function(){return{stages:{}}},update:function(){$.ajax({type:"GET",url:"/data/visits/count",data:{from:this.state.from,to:this.state.to},success:function(e){this.setState({stages:e.stages})}.bind(this),error:function(e){},complete:function(e){}})},componentWillMount:function(){DataDisplays.setupDates(this)},changeFromDate:function(e){this.setState({from:e.target.value})},changeToDate:function(e){this.setState({to:e.target.value})},render:function(){return React.createElement("blockquote",{className:"blockquote",id:"display-flow-overview"},React.createElement("h2",null,"Flow overview"),React.createElement("hr",null),React.createElement("div",{className:"row"},Object.keys(this.state.stages).map(function(e,t){return React.createElement("div",{className:"col-xs-12 col-sm-6 col-md-4",key:"flow-overview-stage-"+t},React.createElement("div",{className:"card"},React.createElement("div",{className:"card-block"},React.createElement("h4",{className:"card-title text-xs-center m-b"},this.state.stages[e].name),React.createElement("hr",null),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-xs-12 col-sm-6 text-xs-center"},React.createElement("h2",null,React.createElement("span",{className:"label label-primary label-rounded"},this.state.stages[e].visits)),React.createElement("h5",{className:"text-muted"},"visit",1==this.state.stages[e].visits?"":"s")),React.createElement("div",{className:"col-xs-12 col-sm-6 text-xs-center"},React.createElement("h2",null,React.createElement("span",{className:"label label-primary label-rounded"},this.state.stages[e].patients)),React.createElement("h5",{className:"text-muted"},"patient",1==this.state.stages[e].patients?"":"s"))))))}.bind(this))),React.createElement("hr",null),React.createElement(DataDisplays.RangeModule,{from:this.state.from,to:this.state.to,onChangeFrom:this.changeFromDate,onChangeTo:this.changeToDate}))}}),DataDisplays.PatientAggregate=React.createClass({displayName:"PatientAggregate",getInitialState:function(){return{stages:[],charts:{}}},update:function(){$.ajax({type:"GET",url:"/data/patients/count",data:{from:this.state.from,to:this.state.to},success:function(e){var t={};e.stages.map(function(e){for(var a in e.data){var s=[];for(var c in e.data[a])s.push(e.data[a][c]);t[a]={chart:{type:"bar"},title:{text:"Fruit Consumption"},xAxis:{categories:Object.keys(e.data[a])},yAxis:{title:{text:"Fruit eaten"}},series:[{name:"Series 1",data:s}]}}}),this.setState({stages:e.stages,charts:t})}.bind(this),error:function(e){},complete:function(e){}})},componentWillMount:function(){DataDisplays.setupDates(this)},componentDidMount:function(){this.renderCharts()},componentDidUpdate:function(){this.renderCharts()},changeFromDate:function(e){this.setState({from:e.target.value})},changeToDate:function(e){this.setState({to:e.target.value})},renderCharts:function(){setTimeout(function(){for(var e in this.state.charts)$("#datadisplays-patient-aggregate-field-"+e).highcharts(this.state.charts[e])}.bind(this),5e3)},render:function(){var e;return e=this.state.stages.length>0?React.createElement("div",{className:"row"},this.state.stages.map(function(e,t){return React.createElement("div",{className:"col-xs-12 col-sm-6 col-md-4 col-lg-3",key:"patient-aggregate-stage-"+t},React.createElement("div",{className:"card"},React.createElement("div",{className:"card-block"},React.createElement("h4",{className:"card-title text-xs-center"},e.name)),React.createElement("ul",{className:"list-group list-group-flush"},Object.keys(e.data).map(function(t){var a=e.data[t];return React.createElement("li",{className:"list-group-item data-points-list",key:"patient-aggregate-field-"+t},React.createElement("ul",{className:"list-unstyled"},React.createElement("li",{className:"bg-secondary"},React.createElement("h6",{className:"m-a-0"},e.fields[t].name)),Object.keys(a).map(function(e){var t;return t=e.length>0?e:React.createElement("em",null,"No data"),React.createElement("li",{className:"data-point-list-item text-xs-left"},t,React.createElement("span",{className:"label label-primary pull-right"},a[e]))})))}.bind(this)))))}.bind(this))):React.createElement("div",{className:"alert alert-info"},"No data found for this display within the specified time range."),React.createElement("blockquote",{className:"blockquote"},React.createElement("h2",null,"Patient aggregate data by stage"),React.createElement("hr",null),e,React.createElement("hr",null),React.createElement(DataDisplays.RangeModule,{from:this.state.from,to:this.state.to,onChangeFrom:this.changeFromDate,onChangeTo:this.changeToDate}))}});